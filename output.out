Running the lexical analyzer...
Tokens:
	program_start_delimiter: HAI in line 1
	linebreak_delimiter: 
 in line 1
	variable_declaration_start_delimiter: WAZZUP in line 2
	linebreak_delimiter: 
 in line 2
	variable_declaration_keyword: I HAS A in line 3
	identifiers: name in line 3
	linebreak_delimiter: 
 in line 3
	variable_declaration_keyword: I HAS A in line 4
	identifiers: age in line 4
	linebreak_delimiter: 
 in line 4
	variable_declaration_keyword: I HAS A in line 5
	identifiers: seven in line 5
	variable_initialization_keyword: ITZ in line 5
	numbr_literal: 7 in line 5
	linebreak_delimiter: 
 in line 5
	variable_declaration_keyword: I HAS A in line 6
	identifiers: num in line 6
	linebreak_delimiter: 
 in line 6
	variable_declaration_end_delimiter: BUHBYE in line 7
	linebreak_delimiter: 
 in line 7
	linebreak_delimiter: 
 in line 8
	linebreak_delimiter: 
 in line 8
	input_keyword: GIMMEH in line 9
	identifiers: name in line 9
	linebreak_delimiter: 
 in line 9
	linebreak_delimiter: 
 in line 10
	linebreak_delimiter: 
 in line 10
	print_keyword: VISIBLE in line 11
	concatenation_operator: SMOOSH in line 11
	string_delimiter: " in line 11
	yarn_literal: My name is  in line 11
	string_delimiter: " in line 11
	function_parameter_keyword: AN in line 11
	identifiers: name in line 11
	linebreak_delimiter: 
 in line 11
	print_keyword: VISIBLE in line 12
	numbr_literal: 17 in line 12
	suppress_newline_delimiter: ! in line 12
	linebreak_delimiter: 
 in line 12
	print_keyword: VISIBLE in line 13
	string_delimiter: " in line 13
	yarn_literal: i am string in line 13
	string_delimiter: " in line 13
	linebreak_delimiter: 
 in line 13
	print_keyword: VISIBLE in line 14
	string_delimiter: " in line 14
	yarn_literal: a in line 14
	string_delimiter: " in line 14
	visible_concatenate_operator: + in line 14
	string_delimiter: " in line 14
	yarn_literal: b in line 14
	string_delimiter: " in line 14
	visible_concatenate_operator: + in line 14
	string_delimiter: " in line 14
	yarn_literal: c in line 14
	string_delimiter: " in line 14
	linebreak_delimiter: 
 in line 14
	linebreak_delimiter: 
 in line 15
	linebreak_delimiter: 
 in line 15
	input_keyword: GIMMEH in line 16
	identifiers: age in line 16
	linebreak_delimiter: 
 in line 16
	linebreak_delimiter: 
 in line 17
	linebreak_delimiter: 
 in line 17
	identifiers: age in line 18
	variable_assignment_keyword: R in line 18
	numbr_literal: 56 in line 18
	linebreak_delimiter: 
 in line 18
	linebreak_delimiter: 
 in line 19
	linebreak_delimiter: 
 in line 19
	program_end_delimiter: KTHXBYE in line 20
	linebreak_delimiter: 
 in line 20
	linebreak_delimiter: 
 in line 21
	linebreak_delimiter: 
 in line 21


Running the syntax analyzer...
Finished parsing...
- <program>
	- HAI
	- <variable-declaration>
		- WAZZUP
		- <var>
			- I HAS A
			- <varident>
				- name
		- <var>
			- I HAS A
			- <varident>
				- age
		- <var>
			- I HAS A
			- <varident>
				- seven
			- <var-initialization>
				- ITZ
				- <var-value>
					- <literal-value>
						- <numbr-literal>
							- 7
		- <var>
			- I HAS A
			- <varident>
				- num
		- BUHBYE
	- <code-block>
		- <input>
			- GIMMEH
			- <varident>
				- name
		- <print>
			- VISIBLE
			- <print-loop>
			- <concat>
				- SMOOSH
				- <concat-loop>
					- <var-value>
						- <literal-value>
							- <yarn-literal>
								- My name is 
					- AN
					- <concat-loop>
						- <var-value>
							- <variable-value>
								- name
		- <print>
			- VISIBLE
			- <print-loop>
				- <var-value>
					- <literal-value>
						- <numbr-literal>
							- 17
			- !
		- <print>
			- VISIBLE
			- <print-loop>
				- <var-value>
					- <literal-value>
						- <yarn-literal>
							- i am string
		- <print>
			- VISIBLE
			- <print-loop>
				- <var-value>
					- <literal-value>
						- <yarn-literal>
							- a
				- +
					- <print-loop>
						- <var-value>
							- <literal-value>
								- <yarn-literal>
									- b
						- +
							- <print-loop>
								- <var-value>
									- <literal-value>
										- <yarn-literal>
											- c
		- <input>
			- GIMMEH
			- <varident>
				- age
		- <assignment>
			- <varident>
				- age
			- R
			- <var-value>
				- <literal-value>
					- <numbr-literal>
						- 56
	- KTHXBYE


Running the semantic analyzer...
HAI
<variable-declaration>
<code-block>
	<input>
	<print>
Resulting String: 
	<print>
Current print information: <var-value> - 
Returning string value: 17
Resulting String: 17	<print>
Current print information: <var-value> - 
Returning string value: i am string
Resulting String: i am string
	<print>
Current print information: <var-value> - 
Returning string value: a
Current print information: + - a
Current print information: <print-loop> - 
Resulting String: a
	<input>
	<assignment>
KTHXBYE
Symbol Table:
	IT: NOOB - None
	name: NOOB - None
	age: NOOB - None
	seven: NUMBR - 7
	num: NOOB - None
